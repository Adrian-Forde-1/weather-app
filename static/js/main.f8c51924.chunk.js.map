{"version":3,"sources":["components/EnterLoaction.js","actions/getLocationAction.js","components/ForecastTemplate.js","components/Chart.js","components/WeatherForecast.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js","SVGS/snow.svg","SVGS/storm.svg","SVGS/cloud.svg","SVGS/sunny.svg","SVGS/rain.svg","SVGS/overcast.svg","SVGS/broken_cloud.svg"],"names":["EnterLoaction","state","location","handleSubmit","e","preventDefault","props","getLocation","history","push","handleChange","setState","target","id","value","handleClick","className","onSubmit","this","htmlFor","type","onChange","to","onClick","Component","connect","dispatch","fetch","then","responce","json","data","catch","console","log","getLocationAction","withRouter","ForecastTemplate","weatherIcon","day","dayName","minTemp","maxTemp","src","alt","width","height","Chart","labelValues","day1","threeHourTemps","dataValues","labels","datasets","label","backgroundColor","borderColor","borderWidth","fill","pointHoverBackgroundColor","options","title","display","text","fontSize","fontColor","WeatheForecast","information","weatherInfo","day2","weatherDescription","day1Weather","day2Weather","day3Weather","day4Weather","day5Weather","sunny","overcast","rain","broken_cloud","storm","snow","cloud","day3","day4","day5","style","textAlign","cityName","country","avgHumidity","wind","App","exact","path","component","WeatherForecast","Boolean","window","hostname","match","initState","citySunrise","citySunset","day1Info","day2Info","day3Info","day4Info","day5Info","getWeatherInfo","city","setCountry","name","setCityName","sunrise","setSunrise","sunset","setSunset","temps","part1","list","slice","d1","Date","dt","getDay","i","length","main","temp_max","Math","floor","temp_min","temp","humidity","weather","description","speed","setDayOneInfo","part2","d2","setDayTwoInfo","part3","d3","setDayThreeInfo","part4","d4","setDayFourInfo","part5","d5","setDayFiveInfo","rootReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"8OAKMA,E,2MACJC,MAAQ,CACNC,SAAU,M,EAGZC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,YAAY,EAAKN,MAAMC,UAClC,EAAKI,MAAME,QAAQC,KAAK,a,EAG1BC,aAAe,SAAAN,GACb,EAAKO,SAAL,eACGP,EAAEQ,OAAOC,GAAK,CAACT,EAAEQ,OAAOE,U,EAI7BC,YAAc,WACZ,EAAKT,MAAMC,YAAY,EAAKN,MAAMC,W,wEAKlC,OACE,yBAAKc,UAAU,aACb,0BAAMA,UAAU,OAAOC,SAAUC,KAAKf,cACpC,yBAAKa,UAAU,gBACb,kDAEF,yBAAKA,UAAU,6BACb,2BAAOG,QAAQ,YAAf,uBACA,2BAAOC,KAAK,OAAOP,GAAG,WAAWQ,SAAUH,KAAKR,eAChD,kBAAC,IAAD,CACEY,GAAG,WACHN,UAAU,YACVO,QAASL,KAAKH,aAHhB,gB,GAhCgBS,aAsDbC,cAAQ,MARG,SAAAC,GACxB,MAAO,CACLnB,YAAa,SAAAL,GACXwB,ECtD2B,SAAAxB,GAC/B,OAAO,SAAAwB,GAGLC,MACE,wDACEzB,EACA,2CAGD0B,MAAK,SAAAC,GAEJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJL,EAAS,CACPN,KAAM,cACNW,YAGHC,OAAM,WAELC,QAAQC,IAAI,qBDgCLC,CAAkBjC,QAKlBuB,CAAiCW,YAAWpC,IEzD9CqC,EAAmB,SAAA/B,GAO9B,OAFA2B,QAAQC,IAAI5B,EAAMgC,aAGhB,yBAAKtB,UAAU,gBACb,wBAAIA,UAAU,YAAYV,EAAMiC,IAAIC,SAEpC,yBAAKxB,UAAU,SACb,uBAAGA,UAAU,YAAYV,EAAMiC,IAAIE,SACnC,uBAAGzB,UAAU,YAAYV,EAAMiC,IAAIG,UAErC,yBACEC,IAAKrC,EAAMgC,YACXM,IAAI,eACJC,MAAM,OACNC,OAAO,SAET,4BAAQjC,GAAG,OAAOgC,MAAM,QAAQC,OAAO,Y,gBCgB9BC,EApCD,SAAAzC,GAEZ,IAAI0C,EAAW,YAAO1C,EAAMA,MAAM2C,KAAKC,gBACnCC,EAAU,YAAO7C,EAAMA,MAAM2C,KAAKC,gBAElCnB,EAAO,CACTqB,OAAQJ,EACRK,SAAU,CACR,CACEC,MAAO,wCACPvB,KAAK,YAAKoB,GACVI,gBAAiB,yBACjBC,YAAa,qBACbC,YAAa,EACbC,MAAM,EACNC,0BAA2B,0BAcjC,OACE,6BACE,kBAAC,IAAD,CAAM5B,KAAMA,EAAMc,MAAO,IAAKC,OAAQ,IAAKc,QAXjC,CACZC,MAAO,CACLC,SAAS,EACTC,KAAM,gCACNC,SAAU,GACVC,UAAW,2B,oHCdXC,E,iLAEF,IAAMC,EAAcjD,KAAKZ,MAAM8D,YAC/BnC,QAAQC,IAAIiC,EAAYE,KAAKC,oBAE7B,IAAIC,EAAc,KACdC,EAAc,KACdC,EAAc,KACdC,EAAc,KACdC,EAAc,KA8HlB,MAvH4C,cAAxCR,EAAYlB,KAAKqB,qBACnBC,EAAcK,KAC4B,eAAxCT,EAAYlB,KAAKqB,qBACnBC,EAAcM,KAC4B,kBAAxCV,EAAYlB,KAAKqB,qBACnBC,EAAcO,KAC4B,qBAAxCX,EAAYlB,KAAKqB,qBACnBC,EAAcQ,KAC4B,oBAAxCZ,EAAYlB,KAAKqB,qBACnBC,EAAcM,KAC4B,kBAAxCV,EAAYlB,KAAKqB,qBACnBC,EAAcQ,KAC4B,gBAAxCZ,EAAYlB,KAAKqB,qBACnBC,EAAcO,KAC4B,eAAxCX,EAAYlB,KAAKqB,qBACnBC,EAAcO,KAC4B,SAAxCX,EAAYlB,KAAKqB,qBAA+BC,EAAcO,KACtB,iBAAxCX,EAAYlB,KAAKqB,qBACnBC,EAAcS,KAC4B,SAAxCb,EAAYlB,KAAKqB,qBAA+BC,EAAcU,KACtB,SAAxCd,EAAYlB,KAAKqB,qBAA+BC,EAAcW,KAEtB,cAAxCf,EAAYE,KAAKC,qBACnBE,EAAcI,KAC4B,eAAxCT,EAAYE,KAAKC,qBACnBE,EAAcK,KAC4B,kBAAxCV,EAAYE,KAAKC,qBACnBE,EAAcM,KAC4B,qBAAxCX,EAAYE,KAAKC,qBACnBE,EAAcO,KAC4B,oBAAxCZ,EAAYE,KAAKC,qBACnBE,EAAcK,KAC4B,kBAAxCV,EAAYE,KAAKC,qBACnBE,EAAcO,KAC4B,gBAAxCZ,EAAYE,KAAKC,qBACnBE,EAAcM,KAC4B,eAAxCX,EAAYE,KAAKC,qBACnBE,EAAcM,KAC4B,SAAxCX,EAAYE,KAAKC,qBAA+BE,EAAcM,KACtB,iBAAxCX,EAAYE,KAAKC,qBACnBE,EAAcQ,KAC4B,SAAxCb,EAAYE,KAAKC,qBAA+BE,EAAcS,KACtB,SAAxCd,EAAYE,KAAKC,qBAA+BE,EAAcU,KAEtB,cAAxCf,EAAYgB,KAAKb,qBACnBG,EAAcG,KAC4B,eAAxCT,EAAYgB,KAAKb,qBACnBG,EAAcI,KAC4B,kBAAxCV,EAAYgB,KAAKb,qBACnBG,EAAcK,KAC4B,qBAAxCX,EAAYgB,KAAKb,qBACnBG,EAAcM,KAC4B,oBAAxCZ,EAAYgB,KAAKb,qBACnBG,EAAcI,KAC4B,kBAAxCV,EAAYgB,KAAKb,qBACnBG,EAAcM,KAC4B,gBAAxCZ,EAAYgB,KAAKb,qBACnBG,EAAcK,KAC4B,eAAxCX,EAAYgB,KAAKb,qBACnBG,EAAcK,KAC4B,SAAxCX,EAAYgB,KAAKb,qBAA+BG,EAAcK,KACtB,iBAAxCX,EAAYgB,KAAKb,qBACnBG,EAAcO,KAC4B,SAAxCb,EAAYgB,KAAKb,qBAA+BG,EAAcQ,KACtB,SAAxCd,EAAYgB,KAAKb,qBAA+BG,EAAcS,KAEtB,cAAxCf,EAAYiB,KAAKd,qBACnBI,EAAcE,KAC4B,eAAxCT,EAAYiB,KAAKd,qBACnBI,EAAcG,KAC4B,kBAAxCV,EAAYiB,KAAKd,qBACnBI,EAAcI,KAC4B,qBAAxCX,EAAYiB,KAAKd,qBACnBI,EAAcK,KAC4B,oBAAxCZ,EAAYiB,KAAKd,qBACnBI,EAAcG,KAC4B,kBAAxCV,EAAYiB,KAAKd,qBACnBI,EAAcK,KAC4B,gBAAxCZ,EAAYiB,KAAKd,qBACnBI,EAAcI,KAC4B,eAAxCX,EAAYiB,KAAKd,qBACnBI,EAAcI,KAC4B,SAAxCX,EAAYiB,KAAKd,qBAA+BI,EAAcI,KACtB,iBAAxCX,EAAYiB,KAAKd,qBACnBI,EAAcM,KAC4B,SAAxCb,EAAYiB,KAAKd,qBAA+BI,EAAcO,KACtB,SAAxCd,EAAYiB,KAAKd,qBAA+BI,EAAcQ,KAEtB,cAAxCf,EAAYkB,KAAKf,qBACnBK,EAAcC,KAC4B,eAAxCT,EAAYkB,KAAKf,qBACnBK,EAAcE,KAC4B,kBAAxCV,EAAYkB,KAAKf,qBACnBK,EAAcG,KAC4B,qBAAxCX,EAAYkB,KAAKf,qBACnBK,EAAcI,KAC4B,oBAAxCZ,EAAYkB,KAAKf,qBACnBK,EAAcE,KAC4B,kBAAxCV,EAAYkB,KAAKf,qBACnBK,EAAcI,KAC4B,gBAAxCZ,EAAYkB,KAAKf,qBACnBK,EAAcG,KAC4B,eAAxCX,EAAYkB,KAAKf,qBACnBK,EAAcG,KAC4B,SAAxCX,EAAYkB,KAAKf,qBAA+BK,EAAcG,KACtB,iBAAxCX,EAAYkB,KAAKf,qBACnBK,EAAcK,KAC4B,SAAxCb,EAAYkB,KAAKf,qBAA+BK,EAAcM,KACtB,SAAxCd,EAAYkB,KAAKf,qBAA+BK,EAAcO,KAElEjD,QAAQC,IAAIiC,EAAYlB,KAAKqB,oBAU3B,yBAAKtD,UAAU,0BACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,CACEM,GAAG,IACHN,UAAU,gBACVsE,MAAO,CAAEC,UAAW,WAEnBpB,EAAYqB,SALf,MAK4BrB,EAAYsB,UAI1C,yBAAKzE,UAAU,kBACb,yBAAKH,GAAG,YAAYG,UAAU,aAC5B,kBAAC,EAAD,CACEuB,IAAK4B,EAAYlB,KACjBX,YAAaiC,KAGjB,yBAAK1D,GAAG,YAAYG,UAAU,aAC5B,kBAAC,EAAD,CACEuB,IAAK4B,EAAYE,KACjB/B,YAAakC,KAGjB,yBAAK3D,GAAG,YAAYG,UAAU,aAC5B,kBAAC,EAAD,CACEuB,IAAK4B,EAAYgB,KACjB7C,YAAamC,KAGjB,yBAAK5D,GAAG,YAAYG,UAAU,aAC5B,kBAAC,EAAD,CACEuB,IAAK4B,EAAYiB,KACjB9C,YAAaoC,KAGjB,yBAAK7D,GAAG,YAAYG,UAAU,aAC5B,kBAAC,EAAD,CACEuB,IAAK4B,EAAYkB,KACjB/C,YAAaqC,MAKnB,yBAAK3D,UAAU,wBACb,kBAAC,EAAD,CAAOV,MAAO6D,IACd,yBAAKnD,UAAU,cACb,wCAAcmD,EAAYlB,KAAKyC,aAC/B,oCAAUvB,EAAYlB,KAAK0C,MAC3B,yBAAKhD,IAAK4B,EAAa3B,IAAI,Y,GAzLVpB,aAuMdC,eANS,SAAAxB,GACtB,MAAO,CACLmE,YAAanE,KAIFwB,CAAyByC,GCnMzB0B,MAbf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK5E,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,IAAIC,UAAW/F,IACjC,kBAAC,IAAD,CAAO8F,KAAK,WAAWC,UAAWC,QCCxBC,QACW,cAA7BC,OAAOhG,SAASiG,UAEe,UAA7BD,OAAOhG,SAASiG,UAEhBD,OAAOhG,SAASiG,SAASC,MACvB,2DClBN,IAAMC,EAAY,CAChBpD,KAAM,CACJT,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAERtB,KAAM,CACJ7B,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAERR,KAAM,CACJ3C,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAERP,KAAM,CACJ5C,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAERN,KAAM,CACJ7C,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAERF,QAAS,KACTD,SAAU,KACVc,YAAa,KACbC,WAAY,MAGVC,EAAW,GACXC,EAAW,GACXC,EAAW,GACXC,EAAW,GACXC,EAAW,GACXpB,EAAW,GACXC,EAAU,GACVa,EAAc,KACdC,EAAa,KAuBjB,SAASM,EAAe9E,GACtB0D,EAWF,SAAoB1D,GAClB,OAAOA,EAAK+E,KAAKrB,QAZPsB,CAAWhF,GACrByD,EAcF,SAAqBzD,GACnB,OAAOA,EAAK+E,KAAKE,KAfNC,CAAYlF,GACvBuE,EAiBF,SAAoBvE,GAClB,OAAOA,EAAK+E,KAAKI,QAlBHC,CAAWpF,GACzBwE,EAoBF,SAAmBxE,GACjB,OAAOA,EAAK+E,KAAKM,OArBJC,CAAUtF,GACvByE,EAuBF,SAAuBzE,GAErB,IAAIuF,EAAQ,GACR5E,EAAU,EACVD,EAAU,MACViD,EAAc,EAEZ6B,EAAK,YAAOxF,EAAKyF,KAAKC,MAAM,EAAG,IACjCxE,EAAO,CACTT,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAaJ+B,EAAK,IAAIC,KAAuB,IAAlB5F,EAAKyF,KAAK,GAAGI,IAC/B3E,EAAKT,QAVS,CACZ,SACA,SACA,UACA,YACA,WACA,SACA,YAGqBkF,EAAGG,UAG1B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAAK,CACrC,IAAIhH,EAAQyG,EAAMO,GAAGE,KAAKC,SACtBnH,EAAQ4B,IAASA,EAAU5B,GAGjC4B,GADAA,EAAUwF,KAAKC,MAAMzF,EAAU,MACX,SACpBO,EAAKP,QAAUA,EACfA,EAAU,EAGV,IAAK,IAAIoF,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAAK,CACrC,IAAIhH,EAAQyG,EAAMO,GAAGE,KAAKI,SACtBtH,EAAQ2B,IAASA,EAAU3B,GAGjC2B,GADAA,EAAUyF,KAAKC,MAAM1F,EAAU,MACX,SACpBQ,EAAKR,QAAUA,EACfA,EAAU,MAGV,IAAK,IAAIqF,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAChCR,EAAM7G,KAAK8G,EAAMO,GAAGE,KAAKK,MACzBf,EAAMQ,GAAKI,KAAKC,MAAMb,EAAMQ,GAAK,KAEnC7E,EAAKC,eAAL,UAA0BoE,GAG1B,IAAK,IAAIQ,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAChCpC,GAAe6B,EAAMO,GAAGE,KAAKM,SAY/B,OAVA5C,GAA4B,EAC5BA,GAA4B,IAC5BzC,EAAKyC,YAAcA,EAGnBzC,EAAKqB,mBAAqBvC,EAAKyF,KAAK,GAAGe,QAAQ,GAAGC,YAGlDvF,EAAK0C,KAAL,UAAe5D,EAAKyF,KAAK,GAAG7B,KAAK8C,MAAjC,QAEOxF,EA/FIyF,CAAc3G,GACzB0E,EAiGF,SAAuB1E,GAErB,IAAIuF,EAAQ,GACR5E,EAAU,EACVD,EAAU,MACViD,EAAc,EAEZiD,EAAK,YAAO5G,EAAKyF,KAAKC,MAAM,EAAG,KAEjCpD,EAAO,CACT7B,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAaJiD,EAAK,IAAIjB,KAAuB,IAAlB5F,EAAKyF,KAAK,GAAGI,IAC/BvD,EAAK7B,QAVS,CACZ,SACA,SACA,UACA,YACA,WACA,SACA,YAGqBoG,EAAGf,UAG1B,IAAK,IAAIC,EAAI,EAAGA,EAAIa,EAAMZ,OAAQD,IAAK,CACrC,IAAIhH,EAAQ6H,EAAMb,GAAGE,KAAKC,SACtBnH,EAAQ4B,IAASA,EAAU5B,GAGjC4B,GADAA,EAAUwF,KAAKC,MAAMzF,EAAU,MACX,SACpB2B,EAAK3B,QAAUA,EACfA,EAAU,EAGV,IAAK,IAAIoF,EAAI,EAAGA,EAAIa,EAAMZ,OAAQD,IAAK,CACrC,IAAIhH,EAAQ6H,EAAMb,GAAGE,KAAKI,SACtBtH,EAAQ2B,IAASA,EAAU3B,GAGjC2B,GADAA,EAAUyF,KAAKC,MAAM1F,EAAU,MACX,SACpB4B,EAAK5B,QAAUA,EACfA,EAAU,MAGV,IAAK,IAAIqF,EAAI,EAAGA,EAAIa,EAAMZ,OAAQD,IAChCR,EAAM7G,KAAKkI,EAAMb,GAAGE,KAAKK,MACzBf,EAAMQ,GAAKI,KAAKC,MAAMb,EAAMQ,GAAK,KAEnCzD,EAAKnB,eAAL,UAA0BoE,GAG1B,IAAK,IAAIQ,EAAI,EAAGA,EAAIa,EAAMZ,OAAQD,IAChCpC,GAAeiD,EAAMb,GAAGE,KAAKM,SAY/B,OAVA5C,GAA4B,EAC5BA,GAA4B,IAC5BrB,EAAKqB,YAAcA,EAGnBrB,EAAKC,mBAAqBvC,EAAKyF,KAAK,GAAGe,QAAQ,GAAGC,YAGlDnE,EAAKsB,KAAL,UAAe5D,EAAKyF,KAAK,GAAG7B,KAAK8C,MAAjC,QAEOpE,EA1KIwE,CAAc9G,GACzB2E,EA4KF,SAAyB3E,GAEvB,IAAIuF,EAAQ,GACR5E,EAAU,EACVD,EAAU,MACViD,EAAc,EAEZoD,EAAK,YAAO/G,EAAKyF,KAAKC,MAAM,GAAI,KAElCtC,EAAO,CACT3C,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAaJoD,EAAK,IAAIpB,KAAwB,IAAnB5F,EAAKyF,KAAK,IAAII,IAChCzC,EAAK3C,QAVS,CACZ,SACA,SACA,UACA,YACA,WACA,SACA,YAGqBuG,EAAGlB,UAG1B,IAAK,IAAIC,EAAI,EAAGA,EAAIgB,EAAMf,OAAQD,IAAK,CACrC,IAAIhH,EAAQgI,EAAMhB,GAAGE,KAAKC,SACtBnH,EAAQ4B,IAASA,EAAU5B,GAGjC4B,GADAA,EAAUwF,KAAKC,MAAMzF,EAAU,MACX,SACpByC,EAAKzC,QAAUA,EACfA,EAAU,EAGV,IAAK,IAAIoF,EAAI,EAAGA,EAAIgB,EAAMf,OAAQD,IAAK,CACrC,IAAIhH,EAAQgI,EAAMhB,GAAGE,KAAKI,SACtBtH,EAAQ2B,IAASA,EAAU3B,GAGjC2B,GADAA,EAAUyF,KAAKC,MAAM1F,EAAU,MACX,SACpB0C,EAAK1C,QAAUA,EACfA,EAAU,MAGV,IAAK,IAAIqF,EAAI,EAAGA,EAAIgB,EAAMf,OAAQD,IAChCR,EAAM7G,KAAKqI,EAAMhB,GAAGE,KAAKK,MACzBf,EAAMQ,GAAKI,KAAKC,MAAMb,EAAMQ,GAAK,KAEnC3C,EAAKjC,eAAL,UAA0BoE,GAG1B,IAAK,IAAIQ,EAAI,EAAGA,EAAIgB,EAAMf,OAAQD,IAChCpC,GAAeoD,EAAMhB,GAAGE,KAAKM,SAY/B,OAVA5C,GAA4B,EAC5BA,GAA4B,IAC5BP,EAAKO,YAAcA,EAGnBP,EAAKb,mBAAqBvC,EAAKyF,KAAK,IAAIe,QAAQ,GAAGC,YAGnDrD,EAAKQ,KAAL,UAAe5D,EAAKyF,KAAK,IAAI7B,KAAK8C,MAAlC,QAEOtD,EArPI6D,CAAgBjH,GAC3B4E,EAuPF,SAAwB5E,GAEtB,IAAIuF,EAAQ,GACR5E,EAAU,EACVD,EAAU,MACViD,EAAc,EAEZuD,EAAK,YAAOlH,EAAKyF,KAAKC,MAAM,GAAI,KAElCrC,EAAO,CACT5C,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAaJuD,EAAK,IAAIvB,KAAwB,IAAnB5F,EAAKyF,KAAK,IAAII,IAChCxC,EAAK5C,QAVS,CACZ,SACA,SACA,UACA,YACA,WACA,SACA,YAGqB0G,EAAGrB,UAG1B,IAAK,IAAIC,EAAI,EAAGA,EAAImB,EAAMlB,OAAQD,IAAK,CACrC,IAAIhH,EAAQmI,EAAMnB,GAAGE,KAAKC,SACtBnH,EAAQ4B,IAASA,EAAU5B,GAGjC4B,GADAA,EAAUwF,KAAKC,MAAMzF,EAAU,MACX,SACpB0C,EAAK1C,QAAUA,EACfA,EAAU,EAGV,IAAK,IAAIoF,EAAI,EAAGA,EAAImB,EAAMlB,OAAQD,IAAK,CACrC,IAAIhH,EAAQmI,EAAMnB,GAAGE,KAAKI,SACtBtH,EAAQ2B,IAASA,EAAU3B,GAGjC2B,GADAA,EAAUyF,KAAKC,MAAM1F,EAAU,MACX,SACpB2C,EAAK3C,QAAUA,EACfA,EAAU,MAGV,IAAK,IAAIqF,EAAI,EAAGA,EAAImB,EAAMlB,OAAQD,IAChCR,EAAM7G,KAAKwI,EAAMnB,GAAGE,KAAKK,MACzBf,EAAMQ,GAAKI,KAAKC,MAAMb,EAAMQ,GAAK,KAEnC1C,EAAKlC,eAAL,UAA0BoE,GAG1B,IAAK,IAAIQ,EAAI,EAAGA,EAAImB,EAAMlB,OAAQD,IAChCpC,GAAeuD,EAAMnB,GAAGE,KAAKM,SAY/B,OAVA5C,GAA4B,EAC5BA,GAA4B,IAC5BN,EAAKM,YAAcA,EAGnBN,EAAKd,mBAAqBvC,EAAKyF,KAAK,IAAIe,QAAQ,GAAGC,YAGnDpD,EAAKO,KAAL,UAAe5D,EAAKyF,KAAK,IAAI7B,KAAK8C,MAAlC,QAEOrD,EAhUI+D,CAAepH,GAC1B6E,EAkUF,SAAwB7E,GAEtB,IAAIuF,EAAQ,GACR5E,EAAU,EACVD,EAAU,MACViD,EAAc,EAEZ0D,EAAK,YAAOrH,EAAKyF,KAAKC,MAAM,GAAI,KAElCpC,EAAO,CACT7C,QAAS,GACTU,eAAgB,GAChBR,QAAS,KACTD,QAAS,KACTiD,YAAa,KACbpB,mBAAoB,GACpBqB,KAAM,MAaJ0D,EAAK,IAAI1B,KAAwB,IAAnB5F,EAAKyF,KAAK,IAAII,IAChCvC,EAAK7C,QAVS,CACZ,SACA,SACA,UACA,YACA,WACA,SACA,YAGqB6G,EAAGxB,UAG1B,IAAK,IAAIC,EAAI,EAAGA,EAAIsB,EAAMrB,OAAQD,IAAK,CACrC,IAAIhH,EAAQsI,EAAMtB,GAAGE,KAAKC,SACtBnH,EAAQ4B,IAASA,EAAU5B,GAGjC4B,GADAA,EAAUwF,KAAKC,MAAMzF,EAAU,MACX,SACpB2C,EAAK3C,QAAUA,EACfA,EAAU,EAGV,IAAK,IAAIoF,EAAI,EAAGA,EAAIsB,EAAMrB,OAAQD,IAAK,CACrC,IAAIhH,EAAQsI,EAAMtB,GAAGE,KAAKI,SACtBtH,EAAQ2B,IAASA,EAAU3B,GAGjC2B,GADAA,EAAUyF,KAAKC,MAAM1F,EAAU,MACX,SACpB4C,EAAK5C,QAAUA,EACfA,EAAU,MAGV,IAAK,IAAIqF,EAAI,EAAGA,EAAIsB,EAAMrB,OAAQD,IAChCR,EAAM7G,KAAK2I,EAAMtB,GAAGE,KAAKK,MACzBf,EAAMQ,GAAKI,KAAKC,MAAMb,EAAMQ,GAAK,KAEnCzC,EAAKnC,eAAL,UAA0BoE,GAG1B,IAAK,IAAIQ,EAAI,EAAGA,EAAIsB,EAAMrB,OAAQD,IAChCpC,GAAe0D,EAAMtB,GAAGE,KAAKM,SAY/B,OAVA5C,GAA4B,EAC5BA,GAA4B,IAC5BL,EAAKK,YAAcA,EAGnBL,EAAKf,mBAAqBvC,EAAKyF,KAAK,IAAIe,QAAQ,GAAGC,YAGnDnD,EAAKM,KAAL,UAAe5D,EAAKyF,KAAK,IAAI7B,KAAK8C,MAAlC,QAEOpD,EA3YIiE,CAAevH,GA8YbwH,MA5aK,WAAgC,IAA/BtJ,EAA8B,uDAAtBoG,EAAWmD,EAAW,uCACjD,MAAoB,gBAAhBA,EAAOpI,MACTyF,EAAe2C,EAAOzH,MAEf,CACLkB,KAAMuD,EACNnC,KAAMoC,EACNtB,KAAMuB,EACNtB,KAAMuB,EACNtB,KAAMuB,EACNnB,QAASA,EACTD,SAAUA,EACVc,YAAaA,EACbC,WAAYA,IAKTtG,G,gBCtEHwJ,EAAQC,YAAYH,EAAaI,YAAgBC,MAEvDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,SFiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvI,MAAK,SAAAwI,GACjCA,EAAaC,iB,mBGnInBC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,sC,uDCA3CD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.f8c51924.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getLocationAction } from \"../actions/getLocationAction\";\n\nclass EnterLoaction extends Component {\n  state = {\n    location: null\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.getLocation(this.state.location);\n    this.props.history.push(\"/weather\");\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: [e.target.value]\n    });\n  };\n\n  handleClick = () => {\n    this.props.getLocation(this.state.location);\n  };\n\n  render() {\n    // console.log(this.props);\n    return (\n      <div className=\"container\">\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <div className=\"project-name\">\n            <h1>React Weather App</h1>\n          </div>\n          <div className=\"main-page-inner-container\">\n            <label htmlFor=\"location\">Enter Your Zip Code</label>\n            <input type=\"text\" id=\"location\" onChange={this.handleChange} />\n            <Link\n              to=\"/weather\"\n              className=\"enter-btn\"\n              onClick={this.handleClick}\n            >\n              Enter\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispathToProps = dispatch => {\n  return {\n    getLocation: location => {\n      dispatch(getLocationAction(location));\n    }\n  };\n};\n\nexport default connect(null, mapDispathToProps)(withRouter(EnterLoaction));\n","export const getLocationAction = location => {\n  return dispatch => {\n    var key = \"ec6dfc0230acc96c5bb5440515bd8601\";\n    // var information = {};\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/forecast?zip=\" +\n        location +\n        \"&appid=\" +\n        key\n    )\n      .then(responce => {\n        // Convert data to json\n        return responce.json();\n      })\n      .then(data => {\n        dispatch({\n          type: \"GET_WEATHER\",\n          data\n        });\n      })\n      .catch(function() {\n        // catch any errors\n        console.log(\"error occured\");\n      });\n  };\n};\n","import React from \"react\";\n\nexport const ForecastTemplate = props => {\n  // const icon = new Skycons({ color: \"FFFFFF\" });\n  // icon.set(\"icon\", Skycons.CLEAR_DAY);\n  // icon.play();\n\n  console.log(props.weatherIcon);\n\n  return (\n    <div className=\"weather-data\">\n      <h1 className=\"day-name\">{props.day.dayName}</h1>\n      {/* <canvas width=\"128px\" height=\"128px\" id=\"icon\"></canvas> */}\n      <div className=\"temps\">\n        <p className=\"min-temp\">{props.day.minTemp}</p>\n        <p className=\"max-temp\">{props.day.maxTemp}</p>\n      </div>\n      <img\n        src={props.weatherIcon}\n        alt=\"Weather Icon\"\n        width=\"75px\"\n        height=\"75px\"\n      />\n      <canvas id=\"icon\" width=\"100px\" height=\"100px\"></canvas>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Chart = props => {\n  //   console.log(props.props.day1.threeHourTemps);\n  let labelValues = [...props.props.day1.threeHourTemps];\n  let dataValues = [...props.props.day1.threeHourTemps];\n\n  let data = {\n    labels: labelValues,\n    datasets: [\n      {\n        label: \"Difference In Temperature Temperature\",\n        data: [...dataValues],\n        backgroundColor: \"rgba(255, 255, 255, 1)\",\n        borderColor: \"rgba(255, 0, 0, 1)\",\n        borderWidth: 1,\n        fill: true,\n        pointHoverBackgroundColor: \"rgba(0, 0, 255, 0.8)\"\n      }\n    ]\n  };\n\n  let options = {\n    title: {\n      display: true,\n      text: \"Temperature Every Three Hours\",\n      fontSize: 25,\n      fontColor: \"rgb(255, 255, 255)\"\n    }\n  };\n\n  return (\n    <div>\n      <Line data={data} width={500} height={300} options={options}></Line>\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { Component } from \"react\";\nimport { ForecastTemplate } from \"./ForecastTemplate\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Chart from \"./Chart\";\n\nimport overcast from \"../SVGS/overcast.svg\";\nimport rain from \"../SVGS/rain.svg\";\nimport snow from \"../SVGS/snow.svg\";\nimport storm from \"../SVGS/storm.svg\";\nimport cloud from \"../SVGS/cloud.svg\";\nimport sunny from \"../SVGS/sunny.svg\";\nimport broken_cloud from \"../SVGS/broken_cloud.svg\";\n\nclass WeatheForecast extends Component {\n  render() {\n    const information = this.props.weatherInfo;\n    console.log(information.day2.weatherDescription);\n\n    let day1Weather = null;\n    let day2Weather = null;\n    let day3Weather = null;\n    let day4Weather = null;\n    let day5Weather = null;\n\n    // var first = document.getElementById(\"preview-1\");\n    // first.addEventListener(\"click\", () => {\n    //   console.log(\"hey\");\n    // });\n\n    if (information.day1.weatherDescription === \"clear sky\")\n      day1Weather = sunny;\n    if (information.day1.weatherDescription === \"few clouds\")\n      day1Weather = overcast;\n    if (information.day1.weatherDescription === \"moderate rain\")\n      day1Weather = rain;\n    if (information.day1.weatherDescription === \"scattered clouds\")\n      day1Weather = broken_cloud;\n    if (information.day1.weatherDescription === \"overcast clouds\")\n      day1Weather = overcast;\n    if (information.day1.weatherDescription === \"broken clouds\")\n      day1Weather = broken_cloud;\n    if (information.day1.weatherDescription === \"shower rain\")\n      day1Weather = rain;\n    if (information.day1.weatherDescription === \"light rain\")\n      day1Weather = rain;\n    if (information.day1.weatherDescription === \"rain\") day1Weather = rain;\n    if (information.day1.weatherDescription === \"thunderstorm\")\n      day1Weather = storm;\n    if (information.day1.weatherDescription === \"snow\") day1Weather = snow;\n    if (information.day1.weatherDescription === \"mist\") day1Weather = cloud;\n\n    if (information.day2.weatherDescription === \"clear sky\")\n      day2Weather = sunny;\n    if (information.day2.weatherDescription === \"few clouds\")\n      day2Weather = overcast;\n    if (information.day2.weatherDescription === \"moderate rain\")\n      day2Weather = rain;\n    if (information.day2.weatherDescription === \"scattered clouds\")\n      day2Weather = broken_cloud;\n    if (information.day2.weatherDescription === \"overcast clouds\")\n      day2Weather = overcast;\n    if (information.day2.weatherDescription === \"broken clouds\")\n      day2Weather = broken_cloud;\n    if (information.day2.weatherDescription === \"shower rain\")\n      day2Weather = rain;\n    if (information.day2.weatherDescription === \"light rain\")\n      day2Weather = rain;\n    if (information.day2.weatherDescription === \"rain\") day2Weather = rain;\n    if (information.day2.weatherDescription === \"thunderstorm\")\n      day2Weather = storm;\n    if (information.day2.weatherDescription === \"snow\") day2Weather = snow;\n    if (information.day2.weatherDescription === \"mist\") day2Weather = cloud;\n\n    if (information.day3.weatherDescription === \"clear sky\")\n      day3Weather = sunny;\n    if (information.day3.weatherDescription === \"few clouds\")\n      day3Weather = overcast;\n    if (information.day3.weatherDescription === \"moderate rain\")\n      day3Weather = rain;\n    if (information.day3.weatherDescription === \"scattered clouds\")\n      day3Weather = broken_cloud;\n    if (information.day3.weatherDescription === \"overcast clouds\")\n      day3Weather = overcast;\n    if (information.day3.weatherDescription === \"broken clouds\")\n      day3Weather = broken_cloud;\n    if (information.day3.weatherDescription === \"shower rain\")\n      day3Weather = rain;\n    if (information.day3.weatherDescription === \"light rain\")\n      day3Weather = rain;\n    if (information.day3.weatherDescription === \"rain\") day3Weather = rain;\n    if (information.day3.weatherDescription === \"thunderstorm\")\n      day3Weather = storm;\n    if (information.day3.weatherDescription === \"snow\") day3Weather = snow;\n    if (information.day3.weatherDescription === \"mist\") day3Weather = cloud;\n\n    if (information.day4.weatherDescription === \"clear sky\")\n      day4Weather = sunny;\n    if (information.day4.weatherDescription === \"few clouds\")\n      day4Weather = overcast;\n    if (information.day4.weatherDescription === \"moderate rain\")\n      day4Weather = rain;\n    if (information.day4.weatherDescription === \"scattered clouds\")\n      day4Weather = broken_cloud;\n    if (information.day4.weatherDescription === \"overcast clouds\")\n      day4Weather = overcast;\n    if (information.day4.weatherDescription === \"broken clouds\")\n      day4Weather = broken_cloud;\n    if (information.day4.weatherDescription === \"shower rain\")\n      day4Weather = rain;\n    if (information.day4.weatherDescription === \"light rain\")\n      day4Weather = rain;\n    if (information.day4.weatherDescription === \"rain\") day4Weather = rain;\n    if (information.day4.weatherDescription === \"thunderstorm\")\n      day4Weather = storm;\n    if (information.day4.weatherDescription === \"snow\") day4Weather = snow;\n    if (information.day4.weatherDescription === \"mist\") day4Weather = cloud;\n\n    if (information.day5.weatherDescription === \"clear sky\")\n      day5Weather = sunny;\n    if (information.day5.weatherDescription === \"few clouds\")\n      day5Weather = overcast;\n    if (information.day5.weatherDescription === \"moderate rain\")\n      day5Weather = rain;\n    if (information.day5.weatherDescription === \"scattered clouds\")\n      day5Weather = broken_cloud;\n    if (information.day5.weatherDescription === \"overcast clouds\")\n      day5Weather = overcast;\n    if (information.day5.weatherDescription === \"broken clouds\")\n      day5Weather = broken_cloud;\n    if (information.day5.weatherDescription === \"shower rain\")\n      day5Weather = rain;\n    if (information.day5.weatherDescription === \"light rain\")\n      day5Weather = rain;\n    if (information.day5.weatherDescription === \"rain\") day5Weather = rain;\n    if (information.day5.weatherDescription === \"thunderstorm\")\n      day5Weather = storm;\n    if (information.day5.weatherDescription === \"snow\") day5Weather = snow;\n    if (information.day5.weatherDescription === \"mist\") day5Weather = cloud;\n\n    console.log(information.day1.weatherDescription);\n\n    // let image = \"\";\n\n    // if (information.day1.weatherDescription === \"overcast clouds\") {\n    //   image = \"./Images/overcastclouds.jpg\";\n    //   document.documentElement.style.setProperty(\" --weather-image\", image);\n    // }\n\n    return (\n      <div className=\"main-weather-container\">\n        <div className=\"header\">\n          <Link\n            to=\"/\"\n            className=\"location-name\"\n            style={{ textAlign: \"center\" }}\n          >\n            {information.cityName} - {information.country}\n          </Link>\n        </div>\n\n        <div className=\"flex-container\">\n          <div id=\"preview-1\" className=\"flex-item\">\n            <ForecastTemplate\n              day={information.day1}\n              weatherIcon={day1Weather}\n            />\n          </div>\n          <div id=\"preview-2\" className=\"flex-item\">\n            <ForecastTemplate\n              day={information.day2}\n              weatherIcon={day2Weather}\n            />\n          </div>\n          <div id=\"preview-3\" className=\"flex-item\">\n            <ForecastTemplate\n              day={information.day3}\n              weatherIcon={day3Weather}\n            />\n          </div>\n          <div id=\"preview-4\" className=\"flex-item\">\n            <ForecastTemplate\n              day={information.day4}\n              weatherIcon={day4Weather}\n            />\n          </div>\n          <div id=\"preview-5\" className=\"flex-item\">\n            <ForecastTemplate\n              day={information.day5}\n              weatherIcon={day5Weather}\n            />\n          </div>\n        </div>\n\n        <div className=\"chart-and-extra-info\">\n          <Chart props={information} />\n          <div className=\"extra-info\">\n            <p>Humidity: {information.day1.avgHumidity}</p>\n            <p>Wind: {information.day1.wind}</p>\n            <img src={day1Weather} alt=\"\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weatherInfo: state\n  };\n};\n\nexport default connect(mapStateToProps)(WeatheForecast);\n","import React from \"react\";\nimport EnterLoaction from \"./components/EnterLoaction\";\nimport WeatherForecast from \"./components/WeatherForecast\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={EnterLoaction} />\n          <Route path=\"/weather\" component={WeatherForecast} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  day1: {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  },\n  day2: {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  },\n  day3: {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  },\n  day4: {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  },\n  day5: {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  },\n  country: null,\n  cityName: null,\n  citySunrise: null,\n  citySunset: null\n};\n\nlet day1Info = {};\nlet day2Info = {};\nlet day3Info = {};\nlet day4Info = {};\nlet day5Info = {};\nlet cityName = \"\";\nlet country = \"\";\nlet citySunrise = null;\nlet citySunset = null;\n\nconst rootReducer = (state = initState, action) => {\n  if (action.type === \"GET_WEATHER\") {\n    getWeatherInfo(action.data);\n\n    return {\n      day1: day1Info,\n      day2: day2Info,\n      day3: day3Info,\n      day4: day4Info,\n      day5: day5Info,\n      country: country,\n      cityName: cityName,\n      citySunrise: citySunrise,\n      citySunset: citySunset\n    };\n  }\n\n  // console.log(state);\n  return state;\n};\n\nfunction getWeatherInfo(data) {\n  country = setCountry(data);\n  cityName = setCityName(data);\n  citySunrise = setSunrise(data);\n  citySunset = setSunset(data);\n  day1Info = setDayOneInfo(data);\n  day2Info = setDayTwoInfo(data);\n  day3Info = setDayThreeInfo(data);\n  day4Info = setDayFourInfo(data);\n  day5Info = setDayFiveInfo(data);\n}\n\nfunction setCountry(data) {\n  return data.city.country;\n}\n\nfunction setCityName(data) {\n  return data.city.name;\n}\n\nfunction setSunrise(data) {\n  return data.city.sunrise;\n}\n\nfunction setSunset(data) {\n  return data.city.sunset;\n}\n\nfunction setDayOneInfo(data) {\n  //Variable Declaration\n  let temps = [];\n  let maxTemp = 0;\n  let minTemp = 99999;\n  let avgHumidity = 0;\n\n  const part1 = [...data.list.slice(0, 8)];\n  let day1 = {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  };\n\n  //Setting the current day name\n  let allDays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  var d1 = new Date(data.list[0].dt * 1000);\n  day1.dayName = allDays[d1.getDay()];\n\n  //Set Maximum Temperature\n  for (let i = 0; i < part1.length; i++) {\n    let value = part1[i].main.temp_max;\n    if (value > maxTemp) maxTemp = value;\n  }\n  maxTemp = Math.floor(maxTemp - 273);\n  maxTemp = maxTemp + \"℃\";\n  day1.maxTemp = maxTemp;\n  maxTemp = 0;\n\n  //Set Minimum Tempterature\n  for (let i = 0; i < part1.length; i++) {\n    let value = part1[i].main.temp_min;\n    if (value < minTemp) minTemp = value;\n  }\n  minTemp = Math.floor(minTemp - 273);\n  minTemp = minTemp + \"℃\";\n  day1.minTemp = minTemp;\n  minTemp = 99999;\n\n  //Set the three hour temperature\n  for (let i = 0; i < part1.length; i++) {\n    temps.push(part1[i].main.temp);\n    temps[i] = Math.floor(temps[i] - 273);\n  }\n  day1.threeHourTemps = [...temps];\n\n  //Set the average daily humidity\n  for (let i = 0; i < part1.length; i++) {\n    avgHumidity += part1[i].main.humidity;\n  }\n  avgHumidity = avgHumidity / 8;\n  avgHumidity = avgHumidity + \"%\";\n  day1.avgHumidity = avgHumidity;\n\n  //Set weather description\n  day1.weatherDescription = data.list[0].weather[0].description;\n\n  //Set window speed\n  day1.wind = `${data.list[0].wind.speed}km/h`;\n\n  return day1;\n}\n\nfunction setDayTwoInfo(data) {\n  //Variable Declaration\n  let temps = [];\n  let maxTemp = 0;\n  let minTemp = 99999;\n  let avgHumidity = 0;\n\n  const part2 = [...data.list.slice(8, 16)];\n\n  let day2 = {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  };\n\n  //Setting the current day name\n  let allDays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  var d2 = new Date(data.list[8].dt * 1000);\n  day2.dayName = allDays[d2.getDay()];\n\n  //Set Maximum Temperature\n  for (let i = 0; i < part2.length; i++) {\n    let value = part2[i].main.temp_max;\n    if (value > maxTemp) maxTemp = value;\n  }\n  maxTemp = Math.floor(maxTemp - 273);\n  maxTemp = maxTemp + \"℃\";\n  day2.maxTemp = maxTemp;\n  maxTemp = 0;\n\n  //Set Minimum Tempterature\n  for (let i = 0; i < part2.length; i++) {\n    let value = part2[i].main.temp_min;\n    if (value < minTemp) minTemp = value;\n  }\n  minTemp = Math.floor(minTemp - 273);\n  minTemp = minTemp + \"℃\";\n  day2.minTemp = minTemp;\n  minTemp = 99999;\n\n  //Set the three hour temperature\n  for (let i = 0; i < part2.length; i++) {\n    temps.push(part2[i].main.temp);\n    temps[i] = Math.floor(temps[i] - 273);\n  }\n  day2.threeHourTemps = [...temps];\n\n  //Set the average daily humidity\n  for (let i = 0; i < part2.length; i++) {\n    avgHumidity += part2[i].main.humidity;\n  }\n  avgHumidity = avgHumidity / 8;\n  avgHumidity = avgHumidity + \"%\";\n  day2.avgHumidity = avgHumidity;\n\n  //Set weather description\n  day2.weatherDescription = data.list[8].weather[0].description;\n\n  //Set window speed\n  day2.wind = `${data.list[8].wind.speed}km/h`;\n\n  return day2;\n}\n\nfunction setDayThreeInfo(data) {\n  //Variable Declaration\n  let temps = [];\n  let maxTemp = 0;\n  let minTemp = 99999;\n  let avgHumidity = 0;\n\n  const part3 = [...data.list.slice(16, 24)];\n\n  let day3 = {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  };\n\n  //Setting the current day name\n  let allDays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  var d3 = new Date(data.list[16].dt * 1000);\n  day3.dayName = allDays[d3.getDay()];\n\n  //Set Maximum Temperature\n  for (let i = 0; i < part3.length; i++) {\n    let value = part3[i].main.temp_max;\n    if (value > maxTemp) maxTemp = value;\n  }\n  maxTemp = Math.floor(maxTemp - 273);\n  maxTemp = maxTemp + \"℃\";\n  day3.maxTemp = maxTemp;\n  maxTemp = 0;\n\n  //Set Minimum Tempterature\n  for (let i = 0; i < part3.length; i++) {\n    let value = part3[i].main.temp_min;\n    if (value < minTemp) minTemp = value;\n  }\n  minTemp = Math.floor(minTemp - 273);\n  minTemp = minTemp + \"℃\";\n  day3.minTemp = minTemp;\n  minTemp = 99999;\n\n  //Set the three hour temperature\n  for (let i = 0; i < part3.length; i++) {\n    temps.push(part3[i].main.temp);\n    temps[i] = Math.floor(temps[i] - 273);\n  }\n  day3.threeHourTemps = [...temps];\n\n  //Set the average daily humidity\n  for (let i = 0; i < part3.length; i++) {\n    avgHumidity += part3[i].main.humidity;\n  }\n  avgHumidity = avgHumidity / 8;\n  avgHumidity = avgHumidity + \"%\";\n  day3.avgHumidity = avgHumidity;\n\n  //Set weather description\n  day3.weatherDescription = data.list[16].weather[0].description;\n\n  //Set window speed\n  day3.wind = `${data.list[16].wind.speed}km/h`;\n\n  return day3;\n}\n\nfunction setDayFourInfo(data) {\n  //Variable Declaration\n  let temps = [];\n  let maxTemp = 0;\n  let minTemp = 99999;\n  let avgHumidity = 0;\n\n  const part4 = [...data.list.slice(24, 32)];\n\n  let day4 = {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  };\n\n  //Setting the current day name\n  let allDays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  var d4 = new Date(data.list[24].dt * 1000);\n  day4.dayName = allDays[d4.getDay()];\n\n  //Set Maximum Temperature\n  for (let i = 0; i < part4.length; i++) {\n    let value = part4[i].main.temp_max;\n    if (value > maxTemp) maxTemp = value;\n  }\n  maxTemp = Math.floor(maxTemp - 273);\n  maxTemp = maxTemp + \"℃\";\n  day4.maxTemp = maxTemp;\n  maxTemp = 0;\n\n  //Set Minimum Tempterature\n  for (let i = 0; i < part4.length; i++) {\n    let value = part4[i].main.temp_min;\n    if (value < minTemp) minTemp = value;\n  }\n  minTemp = Math.floor(minTemp - 273);\n  minTemp = minTemp + \"℃\";\n  day4.minTemp = minTemp;\n  minTemp = 99999;\n\n  //Set the three hour temperature\n  for (let i = 0; i < part4.length; i++) {\n    temps.push(part4[i].main.temp);\n    temps[i] = Math.floor(temps[i] - 273);\n  }\n  day4.threeHourTemps = [...temps];\n\n  //Set the average daily humidity\n  for (let i = 0; i < part4.length; i++) {\n    avgHumidity += part4[i].main.humidity;\n  }\n  avgHumidity = avgHumidity / 8;\n  avgHumidity = avgHumidity + \"%\";\n  day4.avgHumidity = avgHumidity;\n\n  //Set weather description\n  day4.weatherDescription = data.list[24].weather[0].description;\n\n  //Set window speed\n  day4.wind = `${data.list[24].wind.speed}km/h`;\n\n  return day4;\n}\n\nfunction setDayFiveInfo(data) {\n  //Variable Declaration\n  let temps = [];\n  let maxTemp = 0;\n  let minTemp = 99999;\n  let avgHumidity = 0;\n\n  const part5 = [...data.list.slice(32, 40)];\n\n  let day5 = {\n    dayName: \"\",\n    threeHourTemps: [],\n    maxTemp: null,\n    minTemp: null,\n    avgHumidity: null,\n    weatherDescription: \"\",\n    wind: null\n  };\n\n  //Setting the current day name\n  let allDays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  var d5 = new Date(data.list[32].dt * 1000);\n  day5.dayName = allDays[d5.getDay()];\n\n  //Set Maximum Temperature\n  for (let i = 0; i < part5.length; i++) {\n    let value = part5[i].main.temp_max;\n    if (value > maxTemp) maxTemp = value;\n  }\n  maxTemp = Math.floor(maxTemp - 273);\n  maxTemp = maxTemp + \"℃\";\n  day5.maxTemp = maxTemp;\n  maxTemp = 0;\n\n  //Set Minimum Tempterature\n  for (let i = 0; i < part5.length; i++) {\n    let value = part5[i].main.temp_min;\n    if (value < minTemp) minTemp = value;\n  }\n  minTemp = Math.floor(minTemp - 273);\n  minTemp = minTemp + \"℃\";\n  day5.minTemp = minTemp;\n  minTemp = 99999;\n\n  //Set the three hour temperature\n  for (let i = 0; i < part5.length; i++) {\n    temps.push(part5[i].main.temp);\n    temps[i] = Math.floor(temps[i] - 273);\n  }\n  day5.threeHourTemps = [...temps];\n\n  //Set the average daily humidity\n  for (let i = 0; i < part5.length; i++) {\n    avgHumidity += part5[i].main.humidity;\n  }\n  avgHumidity = avgHumidity / 8;\n  avgHumidity = avgHumidity + \"%\";\n  day5.avgHumidity = avgHumidity;\n\n  //Set weather description\n  day5.weatherDescription = data.list[32].weather[0].description;\n\n  //Set window speed\n  day5.wind = `${data.list[32].wind.speed}km/h`;\n\n  return day5;\n}\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/snow.cb7d74c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/storm.30bad1dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.e972f64f.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny.056175ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.4fa3d2b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast.f36a0ff0.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken_cloud.c5de5631.svg\";"],"sourceRoot":""}